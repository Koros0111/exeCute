#! /bin/bash


mainFunction () {
	lowercaseName="${file,,}"
	type="$(file --brief "${file}")"
	mime="$(file --brief --mime-type "${file}")"
	group="$(echo "${mime}" | cut --delimiter='/' --fields=1)"

	if [[ ! -z "$(echo "${type}" | grep "MS-DOS executable")" ]] &&
	[[ -z "$(echo "${type}" | grep "Windows")" ]] ||
	[[ "${group}" == "text" && "${lowercaseName: -4}" == ".bat" ]]; then
		so dosbox -c "$(mounts)" "${file}" -fullscreen -exit
	elif [[ "${mime}" == "application/x-dosexec" ]]; then
		notify-send "Launching $(basename "${file}")" --icon="exeCute" --expire-time="10000"
		export WINEDEBUG=err+all,fixme-all,warn-all,trace-all
		so wine start /unix "${file}"
	else
		echo "Not an exe or a bat: ${file}" >&2
		exit 1
	fi
}


checkFileExist () {
	if [[ ! -f "${file}" ]]; then
		echo "File doesn't exist: ${file}" >&2
		exit 1
	fi
}


checkFileNotEmpty () {
	if [[ -z "${file}" ]]; then
		echo "No file specified" >&2
		echo "Either type: exeCute \"pathToYourExeFile\""
		echo "Or just open with exeCute from the file manager"
		exit 1
	fi
}


isos () {
	find . -type f \
		\( \
			-iname "*.iso" -or \
			-iname "*.cue" -or \
			-iname "*.gog" \
		\) |
	sort |
	xargs
}


mounts () {
	isos="$(isos)"

	if [[ -z "${isos}" ]]; then
		echo "mount d ."
	else
		notifyDiskChangeShortcut "${isos}"
		echo "imgmount d ${isos} -t iso"
	fi
}


notifyDiskChangeShortcut () {
	readarray -t isoList < <(args ${@})

	if [[ "${#isoList[@]}" -gt 1 ]]; then
		notify-send "For changing disk use: Ctrl+F4" --icon="gtk-cdrom" --expire-time="10000"
		sleep 10
	fi
}


prepareEnvironment () {
	set -e
	file="$(args "${@}")"
	checkFileNotEmpty
	checkFileExist
	cd "$(dirname "${file}")"
}


so () {
	/bin/so "-${FUNCNAME[1]}" "${@}"
}


prepareEnvironment "${@}"
mainFunction
